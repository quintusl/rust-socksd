#!/bin/sh
set -e

case "$1" in
    configure)
        # Create rusty-socks user and group
        if ! getent group rusty-socks >/dev/null; then
            addgroup --system rusty-socks
        fi
        
        if ! getent passwd rusty-socks >/dev/null; then
            adduser --system --ingroup rusty-socks --home /var/run/rusty-socks \
                    --shell /bin/false --disabled-password --disabled-login \
                    --gecos "Rusty SOCKS proxy server" rusty-socks
        fi
        
        # Set ownership and permissions
        chown -R rusty-socks:rusty-socks /var/run/rusty-socks
        chown -R rusty-socks:rusty-socks /var/log/rusty-socks
        chown root:rusty-socks /etc/rusty-socks/config.yml
        chmod 640 /etc/rusty-socks/config.yml
        
        # Enable and start the service
        systemctl daemon-reload
        systemctl enable rusty-socks.service
        
        echo "Rusty SOCKS has been installed successfully."
        echo "Edit /etc/rusty-socks/config.yml to configure the server."
        echo "Start the service with: systemctl start rusty-socks"
        ;;
esac

# Automatically added by dh_installsystemd/13.11.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	# The following line should be removed in trixie or trixie+1
	deb-systemd-helper unmask 'rusty-socks.service' >/dev/null || true

	# was-enabled defaults to true, so new installations run enable.
	if deb-systemd-helper --quiet was-enabled 'rusty-socks.service'; then
		# Enables the unit on first installation, creates new
		# symlinks on upgrades if the unit file has changed.
		deb-systemd-helper enable 'rusty-socks.service' >/dev/null || true
	else
		# Update the statefile to add new symlinks (if any), which need to be
		# cleaned up on purge. Also remove old symlinks.
		deb-systemd-helper update-state 'rusty-socks.service' >/dev/null || true
	fi
fi
# End automatically added section
# Automatically added by dh_installsystemd/13.11.4
if [ "$1" = "configure" ] || [ "$1" = "abort-upgrade" ] || [ "$1" = "abort-deconfigure" ] || [ "$1" = "abort-remove" ] ; then
	if [ -d /run/systemd/system ]; then
		systemctl --system daemon-reload >/dev/null || true
		if [ -n "$2" ]; then
			_dh_action=restart
		else
			_dh_action=start
		fi
		deb-systemd-invoke $_dh_action 'rusty-socks.service' >/dev/null || true
	fi
fi
# End automatically added section


exit 0
